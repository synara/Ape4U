@model RedeSocialCondominio.ViewModels.TodasAsEncomendasViewModel


@using (Html.BeginForm("FiltrarEncomendas", "Encomenda", method: FormMethod.Post))
{

    <div class="text-center">
        <img src="~/Images/box.png" width="100" alt="" />
        <h3>Todas as encomendas</h3>
        <h5>Acompanhe, confirme ou cancele encomendas.</h5>
        <h6>Utilize os campos abaixo para filtrar os resultados por período.</h6>
    </div>

    <br />

    <div align="center">
        <div class="col-md-12 fields-align">
            <div class="col-md-6" align="left">
                @Html.Label("De", new { @class = "de" })
                @Html.EditorFor(f => f.De, new { htmlAttributes = new { @class = " de form-control tamanho-datas", required = "required", type = "date" } })
            </div>
            <div class="col-md-6" align="left">
                @Html.Label("Até")
                @Html.EditorFor(f => f.Ate, new { htmlAttributes = new { @class = "form-control tamanho-datas", required = "required", type = "date" } })
                <div>
                    <button type="submit" class="btn btn-primary btn-filtrar">
                        <span class="glyphicon glyphicon-filter"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="loader hide"></div>

    </div>
}


<div align="center">
    @if (Model.Encomendas.Count() != 0)
    {
        <table class="table table-bordered tbl-visitantes">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" class="">Dia previsto</th>
                    <th scope="col" class="">Frágil?</th>
                    <th scope="col" class="">Responsável</th>
                    <th scope="col" class="">Quem recebeu</th>
                    <th scope="col">Dia entregue</th>
                    <th scope="col">Observações</th>
                    <th scope="col">Recebida?</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var e in Model.Encomendas)
                {
                    <tr>
                        <td class="col-sm-1" scope="row">@e.DataHoraEntrega.ToString("dd/MM/yyy")</td>
                        <td class="col-sm-1" scope="row">
                            @if (e.Fragil)
                            {
                                <span>Sim</span>
                            }
                            else
                            {
                                <span>Não</span>
                            }
                        </td>
                        <td class="col-sm-1" scope="row" encomendaId="e.Id">@e.NomeResponsavel</td>
                        <td class="col-sm-1" scope="row">@e.NomeQuemRecebeu</td>
                        <td class="col-sm-1" scope="row">@e.DataHoraEntrega.ToString("dd/MM/yyyy"), às @e.DataHoraEntrega.ToString("HH:mm")</td>
                        <td class="col-md-2" scope="row">
                            @{
                                var descricao = "descricao" + e.Id;
                                <span id="@descricao">@e.DescricaoEncomenda</span>
                            }
                            <div class="" align="right">
                                <span class="glyphicon glyphicon-edit btnEditar" data-toggle="modal" data-target="#myModalSave" onclick="AdicionarObservacao(@e.Id)"></span>
                            </div>
                        </td>
                        @if (e.Entregue)
                        {
                            <td class="col-md-1" scope="row" value="@e.Id">

                                <button class="btn btn-default ok disabled" onclick="EncomendaRecebida(@e.Id)">
                                    <span class="glyphicon glyphicon-ok"></span>
                                </button>
                            </td>
                        }
                        else
                        {
                            <td class="col-sm-1" scope="row" value="@e.Id">
                                <button class="btn btn-default ok" onclick="EncomendaRecebida(@e.Id)">
                                    <span class="glyphicon glyphicon-ok"></span>
                                </button>
                            </td>
                        }

                    </tr>
                                }

            </tbody>
        </table>
                                }
                                else
                                {
                                    <div class="alert alert-warning aviso" role="alert"><b>Não</b> há nenhuma encomenda registrada nesse intervalo de tempo!</div>
                                }
</div>

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Adicionar observação</h4>
            </div>
            <div class="modal-body">
                @{
                    <textarea cols="30" rows="4" id="observacao" class="form-control"></textarea>
                }
            </div>
            <div class="modal-footer">
                <button type="button" id="btnAdd" class="btn btn-primary">Salvar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>


<div class="btn-agendar-visitante">
    <button class="btn btn-secondary">@Html.ActionLink("Voltar", "Index", "Home")</button>&nbsp;
    <button class="btn btn-secondary">@Html.ActionLink("Registrar Encomenda", "Index", "Encomenda")</button>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

@section Scripts {

    <script type="text/javascript" language="javascript">

        function Recarregar() {
            setTimeout(function () {
                window.location.reload();
            }, 2000);
        }

        function EncomendaRecebida(id) {
            if (confirm("Encomenda realmente entregue?")) {
                $('.loader').removeClass('hide');
                var encomendaId = id;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EncomendaRecebida", "Encomenda")' + "?encomendaId=" + encomendaId,
                    dataType: 'json',
                    success: Recarregar()
                });
            }
        }

        function AdicionarObservacao(id) {
            var textarea = document.querySelector('textarea');

            $('#myModalSave').on('hidden.bs.modal', function () {
                $(this).find('textarea').val('');
            });

            $('#btnAdd').click(function () {
                var dto = {
                    Id: id,
                    Observacao: textarea.value
                }

                SalvarObservacao(dto);
            });

        }

        function SalvarObservacao(dto) {
            $.ajax({
                type: "POST",
                url: '/encomenda/adicionarobservacao',
                data: dto,
                success: function (data) {
                    if (data.status) {
                        $('#myModalSave').modal('hide');
                        $('.loader').removeClass('hide');
                        Recarregar();
                    }
                },
                error: function () {
                    alert('Ocorreu um erro. Por favor, tente de novo');
                }
            })

        }

    </script>

}
